import java.util.Arrays;

public class SelectionSort {
    public static void selectionSort(int[] arr) {
        int n = arr.length;
        
        // Iterate through the array
        for (int i = 0; i < n - 1; i++) {
            // Find the minimum element in the unsorted part
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (arr[j] < arr[minIndex]) {
                    minIndex = j;
                }
            }

            // Swap the minimum element with the first element of the unsorted part
            int temp = arr[minIndex];
            arr[minIndex] = arr[i];
            arr[i] = temp;
        }
    }

    public static void main(String[] args) {
        int[] arr1 = {4, 1, 3, 9, 7};
        int[] arr2 = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};

        // Sort both arrays
        selectionSort(arr1);
        selectionSort(arr2);

        // Print the sorted arrays
        System.out.println("Sorted arr1: " + Arrays.toString(arr1));
        System.out.println("Sorted arr2: " + Arrays.toString(arr2));
    }
}

/*
Outer Loop: Iterates through the array, maintaining the boundary between the sorted and unsorted portions.
Inner Loop: Searches for the smallest element in the unsorted portion.
Swapping: Once the smallest element is identified, it is swapped with the first element in the unsorted portion.
Repeat: The process is repeated until the entire array is sorted
*/
